{"name":"VisitorTracking","tagline":"A simple PHP class to gather visitor information, and store it in a database using MYSQLi","body":"### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templa# visitorTracking\r\n## A simple PHP class to gather visitor information, and store it in a database using MYSQLi\r\n\r\n\r\n### What makes this script special?\r\n- It's more modern and complete than others I have seen around on Google/HotScripts. (SQLi, oop(ish?), etc...)\r\n- No bells or whistles, fully customiziable.\r\n\r\n\r\n## INSTALLATION\r\n1. Upload the files to your server.\r\n\r\n1. Edit the database configuration ( `/includes/db.php` )\r\n\r\n1. Create the `visitors` table in your database. (`/_installation/visitors.sql` )\r\n\r\n1. Instance the class in your code.\r\n\r\nWorking Demo: http://tyrexi.us/visitorTracking\r\n\r\nDocumentation: http://tyrexi.us/visitorTrackingDocumentation\r\n\r\n## EXAMPLE INITIALIZATION:\r\n```php\r\n//define database\r\ndefine( 'DB_HOST', 'localhost' );           // set database host\r\ndefine( 'DB_USER', 'root' );                // set database user\r\ndefine( 'DB_PASS', '' );                    // set database password\r\ndefine( 'DB_NAME', 'yourdatabasename' );    // set database name\r\n\r\n//include the class\r\ninclude( 'class.visitorTracking.php' );\r\n\r\n//instance the class\r\n$visitors = new visitorTracking();\r\n```\r\nThe constructor method automatically calls the tracking method `$visitors->track();` which inserts the collected data.\r\n\r\nYou print the array containting the current visit by echoing `$visitors->displayThisVisit();`\r\n\r\nYou can output a table containing all the pagniated data from the database by echoing `$visitors->displayVisitors();`\r\n\r\nAlternatively, you can just grab the table data from your database `SELECT * FROM visitors ORDER BY date DESC` and format it according to your specifications.\r\n\r\n## LICENSE\r\nThis work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\r\nhttp://creativecommons.org/licenses/by-sa/4.0/\r\n\r\nTHIS SOFTWARE IS BEING PROVIDED \"AS IS\", WITHOUT ANY EXPRESS OR IMPLIED WARRANTY.  \r\nIN PARTICULAR, THE AUTHOR DOES NOT MAKE ANY REPRESENTATION OR WARRANTY OF ANY KIND\r\nCONCERNING THE MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR PURPOSE.\r\n\r\n\r\n## Contributing\r\n* Create a Fork of the main branch.\r\n* Clone the repository `$ git clone http://github.com/yourusername/visitorTracking`\r\n* Add a connection to the repository.`$ git remote add origin http://github.com/theshka/visitorTracking`\r\n* Make changes to files.\r\n* `git add` and `git commit` those changes\r\n* `git push` them back to github. These will go to your version of the repository.\r\n* Submit a pull-request\r\ntes\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}